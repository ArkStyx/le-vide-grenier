Todo List :

-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

Plusieurs Catégories
- Immobilier
- Véhicules
- Vacances
- Emploi
- Mode
- Maison
- Multimédia
- Loisirs
- Matériel Professionnel
- Autres

Plusieurs Sous-Catégories
- TODO - LISTE POUR CHAQUE CATEGORIES

-------------------------

Plusieurs filtres
- TODO - LISTE POUR CHAQUE FILTRE

Plusieurs sous-catégorie de filtres par filtre
- TODO - LISTE POUR CHAQUE SOUS-CATEGORIES DE FILTRE


-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

00) LOGICIELS
- Installer Lombok					====>	OK
- Installer Git
- Installer GitHub	
- Installer PostGreSQL
- Installer Liquibase


01) GIT
01.1) Installer Git
01.2) Installer GitHub	
01.3) Pousser le projet sur GitHub
01.4) Aller dans le repertoire du projet à pousser
01.5) Dans gitbash faire commande suivante - initialiser le projet Spring Boot :	"git init"
01.6) Dans gitbash faire commande suivante - ajouter tous les fichiers existants :	"git add ."
01.7) Dans gitbash faire commande suivante - ajouter son mail utilisateur :			"git config --global user.email" [EMAIL_UTILISATEUR]
01.8) Dans gitbash faire commande suivante - ajouter son nom utilisateur : 			"git config --global user.name" [NOM_UTILISATEUR]



01.XXX) Dans gitbash faire commande suivante - XXX :					git remote add origin https://github.com/ArkStyx/le-vide-grenier.git


01.XXX) Dans gitbash faire commande suivante - Vérifier les fichiers modifiés : 	"git checkout"
01.XXX) Dans gitbash faire commande suivante - Ajouter les fichiers modifiés : 		"git add src/main/resources/todo-list.txt"
01.XXX) Dans gitbash faire commande suivante - XXX :								"git fetch"
01.XXX) Dans gitbash faire commande suivante - XXX :								"git rebase origin/master"
01.XXX) Dans gitbash faire commande suivante - verifier nom et adresse distante :			"git remote -v"
01.XXX) Dans gitbash faire commande suivante - pousser sur la branche distante "origin" :	"git push origin main" (ou "master")




DANS L'ORDRE (?)
01.XXX) Dans gitbash faire commande suivante - Vérifier les fichiers modifiés : 	"git checkout"
01.XXX) Dans gitbash faire commande suivante - Ajouter les fichiers modifiés : 		"git add src/main/resources/todo-list.txt"
01.XXX) Dans gitbash faire commande suivante - XXX :								"git fetch"
01.XXX) Dans gitbash faire commande suivante - pousser sur la branche distante "origin" :	"git push origin main" (ou "master")




01) BDD
- Réfléchir au schéma de données

02) BACK
- Controller
- Service
- Dao
- Security
- AOP
- Classes :
==>	Classes de filtres
====>	Classe mere filtre
====>	Classes variees suivant les types d'achat

==>	Classes utilisateur

==> Classes catégories
====>	Classes sous-categories (meme classe ?)

03) FRONT
- React pour attendre une nouvelle techno



-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

A LIRE

https://www.edureka.co/blog/git-commands-with-example/

https://stackoverflow.com/questions/20467179/git-push-rejected-non-fast-forward

https://stackoverflow.com/questions/61753783/impossible-to-merge-branch-refusing-to-merge-unrelated-histories

https://stackoverflow.com/questions/32238616/git-push-fatal-origin-does-not-appear-to-be-a-git-repository-fatal-could-n


